#!/bin/bash

cd /tmp/rom # Depends on where source got synced
rm -rf .repo & # lets remove unnecessary things, so that no storage issue can occur

# Normal build steps
. build/envsetup.sh
lunch dot_ysl-userdebug
export SELINUX_IGNORE_NEVERALLOWS=true
export BUILD_BROKEN_DUP_RULES=true
export ALLOW_MISSING_DEPENDENCIES=true
export CCACHE_DIR=/tmp/ccache
export CCACHE_EXEC=$(which ccache)
export USE_CCACHE=1
ccache -M 25G
ccache -o compression=true
ccache -z

# Telgram env setup
export BOT_MSG_URL="https://api.telegram.org/bot$API_BOT/sendMessage"
export BOT_BUILD_URL="https://api.telegram.org/bot$API_BOT/sendDocument"

tg_post_msg() {
        curl -s -X POST "$BOT_MSG_URL" -d chat_id="$2" \
        -d "parse_mode=html" \
        -d text="$1"
}

# stuffs

# stuffs
up(){
	curl --upload-file $1 https://transfer.sh/
}

make_metalava(){
tg_post_msg "<b>MetaLava is building rn</b>" "$CHATID"
	make api-stubs-docs
	make hiddenapi-lists-docs
	make system-api-stubs-docs
	make test-api-stubs-docs
}

make_rom(){
tg_post_msg "<b>DotOS CI Build Triggered for Ysl</b>" "$CHATID"
                make bacon -j14
url=$(up out/target/product/ysl/*zip)
	echo " "
	echo "$url"
	tg_post_msg "<b>Build Completed</b>%0A%0A<b>Link : </b> <code>"$url"</code>" "$CHATID"
}
make_metalava
make_rom
